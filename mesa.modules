<?xml version="1.0"?><!--*- mode: nxml; indent-tabs-mode: nil -*-->
<!DOCTYPE moduleset SYSTEM "moduleset.dtd">
<?xml-stylesheet type="text/xsl" href="moduleset.xsl"?>
<!-- vim:set ts=2 expandtab: -->
<moduleset>

  <repository type="system" name="system"/>
  <repository type="git" name="git.freedesktop.org"
              href="https://anongit.freedesktop.org/git/"/>
  <repository type="git" name="github.com"
              href="https://github.com/"/>
  <repository type="git" name="gitlab.fdo.org"
              href="https://gitlab.freedesktop.org"/>
  <repository type="git" name="git.gnome.org" default="yes"
              href="https://gitlab.gnome.org/"/>
  <repository type="tarball" name="sourceforge"
              href="http://downloads.sourceforge.net/sourceforge"/>
  <repository type="git" name="ffmpeg.org"
              href="https://git.ffmpeg.org/"/>
  <repository type="git" name="videolan.org"
              href="https://code.videolan.org/"/>

  <meson id="libdrm" mesonargs="">
    <branch repo="gitlab.fdo.org"
            module="mesa/drm"
            revision="main"/>
    <dependencies>
    </dependencies>
  </meson>

  <meson id="wayland-protocols">
    <branch repo="git.freedesktop.org"
            module="wayland/wayland-protocols"
            revision="main"/>
    <dependencies>
      <dep package="wayland"/>
    </dependencies>
  </meson>

  <meson id="wayland" mesonargs="-Ddocumentation=false">
    <branch repo="gitlab.fdo.org"
            module="wayland/wayland"
            revision="main"/>
    <dependencies>
      <dep package="libffi"/>
      <dep package="doxygen"/>
      <dep package="xmlto"/>
    </dependencies>
  </meson>

  <meson id="sixonix" mesonargs="">
    <branch repo="gitlab.fdo.org" module="mesa/sixonix"/>
  </meson>

  <autotools id="glvnd"
             autogenargs="">
    <branch repo="github.com" module="NVIDIA/libglvnd"/>
    <dependencies>
      <dep package="wayland-protocols"/>
    </dependencies>
  </autotools>

  <!-- skip-autogen="never" -->
  <meson id="mesa" mesonargs="-Dgallium-opencl=disabled -Dplatforms=x11,wayland -Dgallium-drivers=iris,crocus,zink,radeonsi -Dgbm=true -Dglvnd=true -Dvulkan-drivers=amd,intel -Dtools=intel-ui,drm-shim -Dvulkan-layers=overlay -Dbuild-tests=true -Dvalgrind=true -Dperfetto=true -Dintel-clc=enabled -Dgallium-va=enabled">
    <branch repo="gitlab.fdo.org"
            module="mesa/mesa"/>
    <dependencies>
      <dep package="libva" />
      <dep package="libdrm" />
      <dep package="libX11" />
      <dep package="glvnd" />
      <dep package="wayland-protocols" />
      <dep package="glvnd"/>
      <dep package="glslang"/>
    </dependencies>
  </meson>

  <meson id="igt" mesonargs="-Ddocs=disabled">
    <branch repo="gitlab.fdo.org"
            module="drm/igt-gpu-tools"/>
    <dependencies>
      <dep package="libdrm" />
    </dependencies>
  </meson>

  <meson id="crucible" mesonargs="-DVK_EXT_mesh_shader=enabled">
    <branch repo="gitlab.fdo.org"
            module="mesa/crucible"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </meson>

  <autotools id="demos" autogenargs="">
    <branch repo="git.freedesktop.org"
            module="mesa/demos"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </autotools>

  <autotools id="vkcube" autogenargs="-Dwayland-protected=true">
    <branch repo="github.com"
            module="krh/vkcube.git"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </autotools>

  <autotools id="cogl" autogenargs="--with-vulkan --enable-kms-egl-platform --enable-wayland-egl-platform --enable-wayland-egl-server --enable-xlib-egl-platform --enable-gles2 --enable-gl">
    <branch repo="git.gnome.org"
            module="cogl"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </autotools>

  <cmake id="piglit" cmakeargs="-DPIGLIT_BUILD_CL_TESTS=on">
    <branch repo="gitlab.fdo.org"
            module="mesa/piglit"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </cmake>

  <cmake id="renderdoc"
         force-non-srcdir-builds="yes" use-ninja="no"
         cmakeargs="-DCMAKE_BUILD_TYPE=Debug -DENABLE_PYRENDERDOC=ON">
    <branch repo="github.com"
            module="baldurk/renderdoc"
            revision="v1.x"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </cmake>

  <cmake id="mdapi" cmakeargs="-DMD_PLATFORM=linux -DMD_BUILD_TYPE=debug">
    <branch repo="github.com"
            module="intel/metrics-discovery"/>
  </cmake>

  <meson id="vkcube">
    <branch repo="github.com"
            module="krh/vkcube"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </meson>

  <meson id="gputop" mesonargs="-Dnative_ui=true -Dnative_ui_gtk=true">
    <branch repo="github.com"
            module="rib/gputop"/>
  </meson>

  <meson id="gpuvis" mesonargs="-Duse_i915_perf=true">
    <branch repo="github.com"
            module="mikesart/gpuvis"/>
  </meson>

  <meson id="ksim" mesonargs="">
    <branch repo="github.com"
            module="krh/ksim"/>
  </meson>

  <meson id="libva" mesonargs="">
    <branch repo="github.com"
            module="intel/libva" />
  </meson>

  <meson id="xserver" mesonargs="-Dxwayland=true -Dxephyr=true -Dxorg=true -Dxkb_bin_dir=/usr/bin">
    <branch repo="gitlab.fdo.org"
            module="xorg/xserver" />
    <dependencies>
      <dep package="xkbcommon" />
    </dependencies>
  </meson>

  <meson id="xf86-video-intel" mesonargs="-Dinternal-debug=full">
    <branch repo="gitlab.fdo.org"
            module="xorg/driver/xf86-video-intel" />
  </meson>

  <meson id="xkbcommon" mesonargs="">
    <branch repo="github.com"
            module="xkbcommon/libxkbcommon" />
  </meson>

  <meson id="libva-utils" mesonargs="">
    <branch repo="github.com"
            module="djdeath/libva-utils" />
    <dependencies>
      <dep package="libva" />
    </dependencies>
  </meson>

  <meson id="intel-vaapi-driver" mesonargs="">
    <branch repo="github.com"
            module="intel/intel-vaapi-driver" />
    <dependencies>
      <dep package="libva" />
    </dependencies>
  </meson>

  <meson id="waffle">
    <branch repo="gitlab.fdo.org"
            module="mesa/waffle" />
    <dependencies>
      <dep package="wayland" />
    </dependencies>
  </meson>

  <cmake id="glslang" cmakeargs="-DENABLE_HLSL=ON" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/glslang"
            revision="main" />
  </cmake>

  <cmake id="Vulkan-Headers" cmakeargs="">
    <branch repo="github.com"
            module="KhronosGroup/Vulkan-Headers"
            revision="main" />
  </cmake>

  <cmake id="SPIRV-Headers" cmakeargs="">
    <branch repo="github.com"
            module="KhronosGroup/SPIRV-Headers"
            revision="main" />
  </cmake>

  <cmake id="SPIRV-Tools" cmakeargs="-DSPIRV-Headers_SOURCE_DIR=$HOME/mesa/src/SPIRV-Headers" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/SPIRV-Tools"
            revision="main" />
    <dependencies>
      <dep package="SPIRV-Headers"/>
    </dependencies>
  </cmake>

  <cmake id="Vulkan-Loader" cmakeargs="-DCMAKE_INSTALL_INCLUDEDIR=$HOME/mesa/build/include/vulkan -DVULKAN_HEADERS_INSTALL_DIR=$HOME/mesa/build" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/Vulkan-Loader"
            revision="main" />
    <dependencies>
      <dep package="Vulkan-Headers"/>
    </dependencies>
  </cmake>

  <cmake id="Vulkan-ValidationLayers" cmakeargs="-DGLSLANG_INSTALL_DIR=$HOME/mesa/build -DVULKAN_HEADERS_INSTALL_DIR=$HOME/mesa/build -DSPIRV_HEADERS_INSTALL_DIR=$HOME/mesa/build -DCMAKE_INSTALL_INCLUDEDIR=$HOME/mesa/build/include/vulkan -DBUILD_TESTS=OFF -DBUILD_LAYER_SUPPORT_FILES=ON" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/Vulkan-ValidationLayers"
            revision="main" />
    <dependencies>
      <dep package="Vulkan-Loader"/>
      <dep package="SPIRV-Headers"/>
      <dep package="glslang"/>
      <dep package="SPIRV-Tools"/>
    </dependencies>
  </cmake>

  <cmake id="Vulkan-Tools" cmakeargs="-DGLSLANG_INSTALL_DIR=$HOME/mesa/build -DCMAKE_INSTALL_INCLUDEDIR=$HOME/mesa/build/include/vulkan -DCMAKE_BUILD_TYPE=Debug" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/Vulkan-Tools"
            revision="main"/>
    <dependencies>
      <dep package="Vulkan-Loader"/>
    </dependencies>
  </cmake>

  <cmake id="llvm-spirv" cmakeargs="" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/SPIRV-LLVM-Translator"
            tag="062788212ce7544b896afbce9dd210c4fea5c0ea" />
  </cmake>

  <cmake id="embree" force-non-srcdir-builds="yes" cmakeargs="-DEMBREE_ISPC_SUPPORT=OFF -DEMBREE_MAX_ISA=SSE4.2">
    <branch repo="github.com"
            module="embree/embree"/>
  </cmake>

  <cmake id="VulkanTools" cmakeargs="-DCMAKE_INSTALL_INCLUDEDIR=$HOME/src/mesa/include/vulkan -DCMAKE_BUILD_TYPE=Debug -DVULKAN_HEADERS_INSTALL_DIR=$HOME/mesa/build -DVULKAN_LOADER_INSTALL_DIR=$HOME/mesa/build -DBUILD_TESTS=OFF" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="LunarG/VulkanTools"
            revision="main" />
    <dependencies>
      <dep package="Vulkan-Loader"/>
    </dependencies>
  </cmake>

  <cmake id="Vulkan-Samples" cmakeargs="" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/Vulkan-Samples"/>
  </cmake>

  <cmake id="nv_tracing" cmakeargs="" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="nvpro-samples/vk_raytracing_tutorial_KHR"/>
  </cmake>

  <cmake id="gfxreconstruct" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="LunarG/gfxreconstruct"/>
  </cmake>

  <cmake id="vkrunner" cmakeargs="">
    <branch repo="github.com"
            module="Igalia/vkrunner"/>
  </cmake>

  <cmake id="media-driver" cmakeargs="-DMEDIA_VERSION=2.0.0 -DBS_DIR_GMMLIB=$PWD/../gmmlib/Source/GmmLib/ -DBS_DIR_COMMON=$PWD/../gmmlib/Source/Common/ -DBS_DIR_INC=$PWD/../gmmlib/Source/inc/ -DBS_DIR_MEDIA=$PWD/../media-driver">
    <branch repo="github.com"
            module="intel/media-driver"/>
  </cmake>

  <meson id="weston" mesonargs="">
    <branch repo="gitlab.fdo.org"
            module="wayland/weston" />
    <dependencies>
      <dep package="wayland" />
      <dep package="wayland-protocols" />
    </dependencies>
  </meson>

  <cmake id="apitrace" cmakeargs="-DBUILD_TESTING=OFF" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="apitrace/apitrace" />
  </cmake>

  <cmake id="frameretrace" cmakeargs="" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="janesma/apitrace"
            revision="frameretrace"
            checkoutdir="frameretrace" />
  </cmake>

  <cmake id="sascha" cmakeargs="" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="SaschaWillems/Vulkan" />
    <dependencies>
      <dep package="mesa" />
      <dep package="Vulkan-Loader" />
    </dependencies>
  </cmake>

  <!-- System depencies -->
  <systemmodule id="libX11">
    <pkg-config>x11.pc</pkg-config>
    <branch repo="system"/>
  </systemmodule>

  <systemmodule id="pangocairo">
    <pkg-config>pangocairo.pc</pkg-config>
    <branch repo="system"/>
  </systemmodule>

  <cmake id="media-driver" cmakeargs="-DBUILD_TYPE=Debug" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="intel/media-driver" />
  </cmake>

  <meson id="gstreamer">
    <branch repo="gitlab.fdo.org"
            module="gstreamer/gstreamer"/>
  </meson>

  <meson id="gst-plugins-base">
    <branch repo="gitlab.fdo.org"
            module="gstreamer/gst-plugins-base"/>
  </meson>

  <meson id="gst-plugins-good">
    <branch repo="gitlab.fdo.org"
            module="gstreamer/gst-plugins-good"/>
  </meson>

  <meson id="gst-plugins-bad">
    <branch repo="gitlab.fdo.org"
            module="gstreamer/gst-plugins-bad"/>
  </meson>

  <cmake id="media-sdk" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="Intel-Media-SDK/MediaSDK"/>
  </cmake>

  <meson id="gst-plugins-media-sdk" mesonargs="-DMFX_HOME=$HOME/src/mesa">
    <branch repo="github.com"
            module="intel/gstreamer-media-SDK"/>
  </meson>

  <cmake id="fossilize"
         force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="ValveSoftware/Fossilize"
            revision="master"/>
  </cmake>

  <meson id="gamescope">
    <branch repo="github.com"
            module="Plagman/gamescope"
            revision="master"/>
  </meson>

  <meson id="vkoverhead">
    <branch repo="github.com"
            module="zmike/vkoverhead"
            revision="main"/>
  </meson>

  <meson id="libva">
    <branch repo="github.com"
            module="intel/libva"
            revision="master"/>
  </meson>

  <autotools id="ffmpeg">
    <branch repo="ffmpeg.org"
            module="ffmpeg"
            revision="master"/>
  </autotools>>

  <meson id="libplacebo" mesonargs="-Dglslang=enabled">
    <branch repo="videolan.org"
            module="videolan/libplacebo"
            revision="master"/>
  </meson>

  <meson id="mpv" mesonargs="-Dvulkan=enabled -Dlibplacebo-next=enabled">
    <branch repo="github.com"
            module="mpv-player/mpv"
            revision="main"/>
    <dependencies>
      <dep package="ffmpeg"/>
      <dep package="libplacebo"/>
    </dependencies>
  </meson>

  <meson id="vkd3d" mesonargs="-Denable_descriptor_qa=true -Denable_tests=true">
    <branch repo="github.com"
            module="HansKristian-Work/vkd3d-proton"
            revision="master"/>
  </meson>

  <meson id="mutter" mesonargs="">
    <branch repo="git.gnome.org"
            module="GNOME/mutter"
            revision="main"/>
  </meson>

  <autotools id="libpng12"
             autogen-sh="configure">
    <branch repo="sourceforge" module="libpng/libpng-${version}.tar.xz" version="1.2.59"
            hash="md5:e120f48f4e27e72255bc366c73aae1db"/>
  </autotools>

</moduleset>
