<?xml version="1.0"?><!--*- mode: nxml; indent-tabs-mode: nil -*-->
<!DOCTYPE moduleset SYSTEM "moduleset.dtd">
<?xml-stylesheet type="text/xsl" href="moduleset.xsl"?>
<!-- vim:set ts=2 expandtab: -->
<moduleset>

  <repository type="system" name="system"/>
  <repository type="git" name="git.freedesktop.org"
              href="https://anongit.freedesktop.org/git/"/>
  <repository type="git" name="github.com"
              href="https://github.com/"/>
  <repository type="git" name="gitlab.fdo.org"
              href="https://gitlab.freedesktop.org"/>
  <repository type="git" name="git.gnome.org" default="yes"
              href="https://git.gnome.org/browse/"/>

  <meson id="libdrm" mesonargs="">
    <branch repo="gitlab.fdo.org"
            module="mesa/drm"/>
    <dependencies>
    </dependencies>
  </meson>

  <autotools id="wayland-protocols">
    <branch repo="git.freedesktop.org" module="wayland/wayland-protocols"/>
    <dependencies>
      <dep package="wayland"/>
    </dependencies>
  </autotools>

  <autotools id="wayland"
             autogenargs="--disable-documentation">
    <branch repo="gitlab.fdo.org" module="wayland/wayland"/>
    <dependencies>
      <dep package="libffi"/>
      <dep package="doxygen"/>
      <dep package="xmlto"/>
    </dependencies>
  </autotools>

  <autotools id="glvnd"
             autogenargs="">
    <branch repo="github.com" module="NVIDIA/libglvnd"/>
    <dependencies>
      <dep package="wayland-protocols"/>
    </dependencies>
  </autotools>

  <!-- skip-autogen="never" -->
  <meson id="mesa" mesonargs="-Dgles2=true -Ddri-drivers=i965 -Degl-platforms=x11,drm,wayland,surfaceless -Dgallium-drivers=iris -Dgbm=true -Dglvnd=true -Dvulkan-drivers=intel -Dtools=intel-ui,drm-shim -Dvulkan-overlay-layer=true -Dvulkan-timeline-semaphore-layer=true -Dbuild-tests=true">
    <branch repo="gitlab.fdo.org"
            module="mesa/mesa"/>
    <dependencies>
      <dep package="libdrm" />
      <dep package="libX11" />
      <dep package="glvnd" />
      <dep package="wayland-protocols" />
      <dep package="glvnd"/>
    </dependencies>
  </meson>

  <meson id="igt" mesonargs="-Ddocs=disabled">
    <branch repo="gitlab.fdo.org"
            module="drm/igt-gpu-tools"/>
    <dependencies>
      <dep package="libdrm" />
    </dependencies>
  </meson>

  <autotools id="crucible" autogenargs="">
    <branch repo="gitlab.fdo.org"
            module="mesa/crucible"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </autotools>

  <autotools id="demos" autogenargs="">
    <branch repo="git.freedesktop.org"
            module="mesa/demos"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </autotools>

  <autotools id="vkcube" autogenargs="">
    <branch repo="github.com"
            module="krh/vkcube.git"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </autotools>

  <autotools id="cogl" autogenargs="--with-vulkan --enable-kms-egl-platform --enable-wayland-egl-platform --enable-wayland-egl-server --enable-xlib-egl-platform --enable-gles2 --enable-gl">
    <branch repo="git.gnome.org"
            module="cogl"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </autotools>

  <cmake id="piglit">
    <branch repo="gitlab.fdo.org"
            module="mesa/piglit"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </cmake>

  <cmake id="renderdoc"
         force-non-srcdir-builds="yes" use-ninja="no"
         cmakeargs="-DCMAKE_BUILD_TYPE=Debug -DENABLE_PYRENDERDOC=ON">
    <branch repo="github.com"
            module="baldurk/renderdoc"
            revision="v1.x"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </cmake>

  <cmake id="mdapi" cmakeargs="-DMD_PLATFORM=linux -DMD_BUILD_TYPE=debug">
    <branch repo="github.com"
            module="intel/metrics-discovery"/>
  </cmake>

  <meson id="vkcube">
    <branch repo="github.com"
            module="krh/vkcube"/>
    <dependencies>
      <dep package="mesa" />
    </dependencies>
  </meson>

  <meson id="gputop" mesonargs="-Dnative_ui=true -Dnative_ui_gtk=true">
    <branch repo="github.com"
            module="rib/gputop"/>
  </meson>

  <cmake id="gpuvis" cmakeargs="-DUSE_I915_PERF=ON">
    <branch repo="github.com"
            module="mikesart/gpuvis"/>
  </cmake>

  <meson id="ksim" mesonargs="">
    <branch repo="github.com"
            module="krh/ksim"/>
  </meson>

  <meson id="libva" mesonargs="">
    <branch repo="github.com"
            module="intel/libva" />
  </meson>

  <meson id="xserver" mesonargs="-Dxwayland=true -Dxephyr=true -Dxorg=true -Dxkb_bin_dir=/usr/bin">
    <branch repo="gitlab.fdo.org"
            module="xorg/xserver" />
    <dependencies>
      <dep package="xkbcommon" />
    </dependencies>
  </meson>

  <meson id="xkbcommon" mesonargs="">
    <branch repo="github.com"
            module="xkbcommon/libxkbcommon" />
  </meson>

  <meson id="libva-utils" mesonargs="">
    <branch repo="github.com"
            module="djdeath/libva-utils" />
    <dependencies>
      <dep package="libva" />
    </dependencies>
  </meson>

  <meson id="intel-vaapi-driver" mesonargs="">
    <branch repo="github.com"
            module="intel/intel-vaapi-driver" />
    <dependencies>
      <dep package="libva" />
    </dependencies>
  </meson>

  <cmake id="waffle">
    <branch repo="github.com"
            module="waffle-gl/waffle" />
    <dependencies>
      <dep package="wayland" />
    </dependencies>
  </cmake>

  <cmake id="glslang" cmakeargs="-DENABLE_HLSL=ON" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/glslang"/>
  </cmake>

  <cmake id="Vulkan-Headers" cmakeargs="">
    <branch repo="github.com"
            module="KhronosGroup/Vulkan-Headers"/>
  </cmake>

  <cmake id="SPIRV-Headers" cmakeargs="">
    <branch repo="github.com"
            module="KhronosGroup/SPIRV-Headers" />
  </cmake>

  <cmake id="SPIRV-Tools" cmakeargs="-DSPIRV-Headers_SOURCE_DIR=/home/djdeath/mesa/src/SPIRV-Headers" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/SPIRV-Tools"/>
    <dependencies>
      <dep package="SPIRV-Headers"/>
    </dependencies>
  </cmake>

  <cmake id="Vulkan-Loader" cmakeargs="-DCMAKE_INSTALL_INCLUDEDIR=/home/djdeath/mesa/build/include/vulkan -DVULKAN_HEADERS_INSTALL_DIR=/home/djdeath/mesa/build" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/Vulkan-Loader"/>
    <dependencies>
      <dep package="Vulkan-Headers"/>
    </dependencies>
  </cmake>

  <cmake id="Vulkan-ValidationLayers" cmakeargs="-DGLSLANG_INSTALL_DIR=/home/djdeath/mesa/build -DCMAKE_INSTALL_INCLUDEDIR=/home/djdeath/mesa/build/include/vulkan -DBUILD_TESTS=ON" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/Vulkan-ValidationLayers"/>
    <dependencies>
      <dep package="Vulkan-Loader"/>
      <dep package="glslang"/>
      <dep package="SPIRV-Tools"/>
    </dependencies>
  </cmake>

  <cmake id="Vulkan-Tools" cmakeargs="-DGLSLANG_INSTALL_DIR=/home/djdeath/mesa/build -DCMAKE_INSTALL_INCLUDEDIR=/home/djdeath/mesa/build/include/vulkan -DCMAKE_BUILD_TYPE=Debug" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="KhronosGroup/Vulkan-Tools"/>
    <dependencies>
      <dep package="Vulkan-Loader"/>
    </dependencies>
  </cmake>

  <cmake id="VulkanTools" cmakeargs="-DGLSLANG_INSTALL_DIR=/home/djdeath/src/mesa -DCMAKE_INSTALL_INCLUDEDIR=/home/djdeath/src/mesa/include/vulkan -DCMAKE_BUILD_TYPE=Debug -DVULKAN_HEADERS_INSTALL_DIR=/home/djdeath/mesa/build -DVULKAN_LOADER_INSTALL_DIR=/home/djdeath/mesa/build -DVULKAN_VALIDATIONLAYERS_INSTALL_DIR=/home/djdeath/mesa/build -DBUILD_LAYERSVT=ON -DBUILD_TESTS=OFF" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="LunarG/VulkanTools"/>
    <dependencies>
      <dep package="Vulkan-Loader"/>
    </dependencies>
  </cmake>

  <cmake id="VulkanSamples" cmakeargs="-DGLSLANG_INSTALL_DIR=/home/djdeath/src/mesa -DVULKAN_LOADER_INSTALL_DIR=/home/djdeath/src/mesa -DCMAKE_INSTALL_INCLUDEDIR=/home/djdeath/src/mesa/include/vulkan -DBUILD_SAMPLE_LAYERS=1 -DBUILD_API_SAMPLES=OFF" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="LunarG/VulkanSamples"/>
    <dependencies>
      <dep package="Vulkan-Loader"/>
    </dependencies>
  </cmake>

  <cmake id="vkrunner" cmakeargs="">
    <branch repo="github.com"
            module="Igalia/vkrunner"/>
  </cmake>

  <cmake id="media-driver" cmakeargs="-DMEDIA_VERSION=2.0.0 -DBS_DIR_GMMLIB=$PWD/../gmmlib/Source/GmmLib/ -DBS_DIR_COMMON=$PWD/../gmmlib/Source/Common/ -DBS_DIR_INC=$PWD/../gmmlib/Source/inc/ -DBS_DIR_MEDIA=$PWD/../media-driver">
    <branch repo="github.com"
            module="intel/media-driver"/>
  </cmake>

  <autotools id="weston" autogenargs="--disable-setuid-install">
    <branch repo="gitlab.fdo.org"
            module="wayland/weston" />
    <dependencies>
      <dep package="wayland" />
      <dep package="wayland-protocols" />
    </dependencies>
  </autotools>

  <cmake id="apitrace" cmakeargs="" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="apitrace/apitrace" />
  </cmake>

  <cmake id="frameretrace" cmakeargs="" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="janesma/apitrace"
            revision="frameretrace"
            checkoutdir="frameretrace" />
  </cmake>

  <cmake id="sascha" cmakeargs="" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="SaschaWillems/Vulkan" />
    <dependencies>
      <dep package="mesa" />
      <dep package="Vulkan-Loader" />
    </dependencies>
  </cmake>

  <!-- System depencies -->
  <systemmodule id="libX11">
    <pkg-config>x11.pc</pkg-config>
    <branch repo="system"/>
  </systemmodule>

  <systemmodule id="pangocairo">
    <pkg-config>pangocairo.pc</pkg-config>
    <branch repo="system"/>
  </systemmodule>

  <cmake id="media-driver" cmakeargs="-DBUILD_TYPE=Debug" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="intel/media-driver" />
  </cmake>

  <meson id="gstreamer">
    <branch repo="gitlab.fdo.org"
            module="gstreamer/gstreamer"/>
  </meson>

  <meson id="gst-plugins-base">
    <branch repo="gitlab.fdo.org"
            module="gstreamer/gst-plugins-base"/>
  </meson>

  <meson id="gst-plugins-good">
    <branch repo="gitlab.fdo.org"
            module="gstreamer/gst-plugins-good"/>
  </meson>

  <meson id="gst-plugins-bad">
    <branch repo="gitlab.fdo.org"
            module="gstreamer/gst-plugins-bad"/>
  </meson>

  <cmake id="media-sdk" force-non-srcdir-builds="yes">
    <branch repo="github.com"
            module="Intel-Media-SDK/MediaSDK"/>
  </cmake>

  <meson id="gst-plugins-media-sdk" mesonargs="-DMFX_HOME=/home/djdeath/src/mesa">
    <branch repo="github.com"
            module="intel/gstreamer-media-SDK"/>
  </meson>

</moduleset>
